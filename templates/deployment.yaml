{{- $fullName := include "xwiki.fullname" . -}}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "xwiki.labels" . | nindent 4 }}
spec:  
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "xwiki.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "xwiki.labels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
      {{- if .Values.image.tag }}
        image: {{ .Values.image.name }}:{{ .Values.image.tag }}
      {{- else if .Values.mysql.enabled }}
        image: "{{ .Values.image.name }}:lts-mysql-tomcat"
      {{- else if .Values.postgresql.enabled }}
        image: "{{ .Values.image.name }}:lts-postgres-tomcat"
      {{- else }}
        image: {{ .Values.image.name }}
      {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/bash", "/configmaps/entrypoint"]
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
        {{- if .Values.mysql.enabled }}
              name: "{{ .Release.Name }}-mysql"
              key: mysql-password
        {{- else if .Values.postgresql.enabled }}
              name: "{{ .Release.Name }}-postgresql"
              key: postgres-password
        {{- else }}
              name: {{ .Release.Name | quote }}
              key: DB_PASSWORD
        {{- end }}
        {{- if .Values.solr.enabled }}
        - name: INDEX_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ $fullName }}
              key: INDEX_HOST
        - name: INDEX_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ $fullName }}
              key: INDEX_PORT
        {{- end }}
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ $fullName }}
              key: DB_HOST
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ $fullName }}
              key: DB_USER
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ $fullName }}
              key: DB_DATABASE
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
        - name: xwiki-data
          mountPath: /usr/local/xwiki/data
        - name: configmaps
          mountPath: /configmaps
      volumes:
      - name: xwiki-data
        persistentVolumeClaim:
          claimName: xwiki
      - name: configmaps
        configMap:
          name: {{ include "xwiki.initScripts" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: xwiki
spec:
  accessModes:
    - {{ .Values.storageAccessMode | quote }}
  resources:
    requests:
      storage: {{ .Values.storage }}
    {{- if .Values.storageClass }}
    storageClassName: {{ .Values.storageClass | quote }}
    {{- end }}
